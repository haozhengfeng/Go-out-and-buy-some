<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.haozf.mybatis.mapper.AdminMapper">
  <resultMap id="BaseResultMap" type="org.haozf.mybatis.model.Admin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="weixin" jdbcType="VARCHAR" property="weixin" />
    <result column="weibo" jdbcType="VARCHAR" property="weibo" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="roleid" jdbcType="INTEGER" property="roleid" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="isdelete" jdbcType="INTEGER" property="isdelete" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="auth" jdbcType="VARCHAR" property="auth" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, cellphone, qq, weixin, weibo, password, roleid, shopid, status, isdelete, 
    addtime, auth
  </sql>
  <select id="selectByExample" parameterType="org.haozf.mybatis.model.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.haozf.mybatis.model.Admin" useGeneratedKeys="true">
    insert into admin (username, cellphone, qq, 
      weixin, weibo, password, 
      roleid, shopid, status, 
      isdelete, addtime, auth
      )
    values (#{username,jdbcType=VARCHAR}, #{cellphone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{weixin,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{roleid,jdbcType=INTEGER}, #{shopid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{isdelete,jdbcType=INTEGER}, #{addtime,jdbcType=TIMESTAMP}, #{auth,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.haozf.mybatis.model.Admin" useGeneratedKeys="true">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="cellphone != null">
        cellphone,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="weixin != null">
        weixin,
      </if>
      <if test="weibo != null">
        weibo,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="roleid != null">
        roleid,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isdelete != null">
        isdelete,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="auth != null">
        auth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null">
        #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.haozf.mybatis.model.AdminExample" resultType="java.lang.Long">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="org.haozf.mybatis.model.Admin">
    update admin
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null">
        weixin = #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="auth != null">
        auth = #{auth,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.haozf.mybatis.model.Admin">
    update admin
    set username = #{username,jdbcType=VARCHAR},
      cellphone = #{cellphone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      weixin = #{weixin,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      roleid = #{roleid,jdbcType=INTEGER},
      shopid = #{shopid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      isdelete = #{isdelete,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      auth = #{auth,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>