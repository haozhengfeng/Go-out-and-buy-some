<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.haozf.mybatis.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="org.haozf.mybatis.model.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="goodscover" jdbcType="VARCHAR" property="goodscover" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="categorycode" jdbcType="INTEGER" property="categorycode" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="hasgoods" jdbcType="INTEGER" property="hasgoods" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="isdelete" jdbcType="INTEGER" property="isdelete" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="picnum" jdbcType="INTEGER" property="picnum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, goodscover, description, categorycode, shopid, hasgoods, status, isdelete, 
    addtime, picnum
  </sql>
  <select id="selectByExample" parameterType="org.haozf.mybatis.model.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.haozf.mybatis.model.Goods" useGeneratedKeys="true">
    insert into goods (title, goodscover, description, 
      categorycode, shopid, hasgoods, 
      status, isdelete, addtime, 
      picnum)
    values (#{title,jdbcType=VARCHAR}, #{goodscover,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{categorycode,jdbcType=INTEGER}, #{shopid,jdbcType=INTEGER}, #{hasgoods,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER}, #{addtime,jdbcType=TIMESTAMP}, 
      #{picnum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.haozf.mybatis.model.Goods" useGeneratedKeys="true">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="goodscover != null">
        goodscover,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="categorycode != null">
        categorycode,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
      <if test="hasgoods != null">
        hasgoods,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isdelete != null">
        isdelete,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="picnum != null">
        picnum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="goodscover != null">
        #{goodscover,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="categorycode != null">
        #{categorycode,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="hasgoods != null">
        #{hasgoods,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="picnum != null">
        #{picnum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.haozf.mybatis.model.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="org.haozf.mybatis.model.Goods">
    update goods
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="goodscover != null">
        goodscover = #{goodscover,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="categorycode != null">
        categorycode = #{categorycode,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="hasgoods != null">
        hasgoods = #{hasgoods,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="picnum != null">
        picnum = #{picnum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.haozf.mybatis.model.Goods">
    update goods
    set title = #{title,jdbcType=VARCHAR},
      goodscover = #{goodscover,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      categorycode = #{categorycode,jdbcType=INTEGER},
      shopid = #{shopid,jdbcType=INTEGER},
      hasgoods = #{hasgoods,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      isdelete = #{isdelete,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      picnum = #{picnum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>